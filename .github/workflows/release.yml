name: Automatic Release

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  release:
    strategy:
      matrix:
        python: ['3.8']
        platform: [ubuntu-latest]
    runs-on: ${{ matrix.platform }}
    steps:
    - uses: actions/checkout@v2
      with:
        lfs: true
        submodules: false
        fetch-depth: 0
    - name: Set release version
      run: |
        echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV;
        echo "${GITHUB_REF#refs/*/}" > VERSION
    - name: Compress services
      run: >
        tar -c --exclude-ignore=.tarignore -zvf /tmp/sh-services-${{ env.RELEASE_VERSION }}.tar.gz .
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: /tmp/sh-services-${{ env.RELEASE_VERSION }}.tar.gz
        asset_name: sh-services-${{ env.RELEASE_VERSION }}.tar.gz
        asset_content_type: application/tar+gzip
